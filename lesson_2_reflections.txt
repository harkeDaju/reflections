What happens when you initialize a repository? Why do you need to do it?

	When you initialize a repository, a hidden folder called .git, is created
	in the present folder. This done to convert the folder into a repository. 
	The .git folder contains the metadata of the repository.
	
How is the staging area different from the working directory and the 
repository? What value do you think it offers?

	The staging area is the intermediate step before commiting the changes to
	the repository. This is the area when you collect all the files that you 
	want to commit. It helps to put all the related changes in different files
	in one common commit.
	
How can you use the staging area to make sure you have one commit per logical 
change?

	The files to be committed to the repository, first needs to be staged in  
	the staging area. Using the staging area we can just stage only those files 
	pertaining to a single logical change. This way we can ensure one commit 
	per logical change.
	
What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	If we wanted to experiment a feature but not affect the master or wanted 
	different versions of the master without affecting it then in these 
	situations branches would be helpful in keeping the history organized.
	
How do the diagrams help you visualize the branch structure?

	The diagrams helps us to find where exactly the branches started and till
	what point they had similarities. The diagram also helps to find unreachable
	commits. It helps to visualize the reachability of the commits.
	
What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	When two branches are merged, all the commits of both branches will be 
	present and accessible from the single new branch. When two branches are
	merged, the new commit will be pointing to the end points of both the 
	parent branches as its parent commits. The new branch will then take the 
	name of the branch which is being merged to. This is the reason why the
	merging is represented in the diagram the way it is.